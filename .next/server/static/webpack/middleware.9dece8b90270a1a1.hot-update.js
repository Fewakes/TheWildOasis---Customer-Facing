"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./app/_lib/auth.js":
/*!**************************!*\
  !*** ./app/_lib/auth.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   signIn: () => (/* binding */ signIn),\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(middleware)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/google */ \"(middleware)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var _data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./data-service */ \"(middleware)/./app/_lib/data-service.js\");\n\n\n\nconst authConfig = {\n    providers: [\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: process.env.AUTH_GOOGLE_ID,\n            clientSecret: process.env.AUTH_GOOGLE_SECRET\n        })\n    ],\n    callbacks: {\n        authorized ({ auth, request }) {\n            return !!auth?.user;\n        },\n        async signIn ({ user, account, profile }) {\n            try {\n                const existingGuest = await (0,_data_service__WEBPACK_IMPORTED_MODULE_2__.getGuest)(user.email);\n                if (!existingGuest) await (0,_data_service__WEBPACK_IMPORTED_MODULE_2__.createGuest)({\n                    email: user.email,\n                    fullName: user.name\n                });\n                return true;\n            } catch  {\n                return false;\n            }\n        },\n        async session ({ session, user }) {\n            const guest = (0,_data_service__WEBPACK_IMPORTED_MODULE_2__.getGuest)(session.user.email);\n            session.user.guestId = guest.id;\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    }\n};\nconst { auth, signIn, signOut, handlers: { GET, POST } } = (0,next_auth__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(authConfig);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vYXBwL19saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFpQztBQUNlO0FBQ087QUFFdkQsTUFBTUksYUFBYTtJQUNqQkMsV0FBVztRQUNUSixzRUFBTUEsQ0FBQztZQUNMSyxVQUFVQyxRQUFRQyxHQUFHLENBQUNDLGNBQWM7WUFDcENDLGNBQWNILFFBQVFDLEdBQUcsQ0FBQ0csa0JBQWtCO1FBQzlDO0tBQ0Q7SUFDREMsV0FBVztRQUNUQyxZQUFXLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1lBQzFCLE9BQU8sQ0FBQyxDQUFDRCxNQUFNRTtRQUNqQjtRQUNBLE1BQU1DLFFBQU8sRUFBRUQsSUFBSSxFQUFFRSxPQUFPLEVBQUVDLE9BQU8sRUFBRTtZQUNyQyxJQUFJO2dCQUNGLE1BQU1DLGdCQUFnQixNQUFNakIsdURBQVFBLENBQUNhLEtBQUtLLEtBQUs7Z0JBQy9DLElBQUksQ0FBQ0QsZUFDSCxNQUFNbEIsMERBQVdBLENBQUM7b0JBQUVtQixPQUFPTCxLQUFLSyxLQUFLO29CQUFFQyxVQUFVTixLQUFLTyxJQUFJO2dCQUFDO2dCQUU3RCxPQUFPO1lBQ1QsRUFBRSxPQUFNO2dCQUNOLE9BQU87WUFDVDtRQUNGO1FBQ0EsTUFBTUMsU0FBUSxFQUFFQSxPQUFPLEVBQUVSLElBQUksRUFBRTtZQUM3QixNQUFNUyxRQUFRdEIsdURBQVFBLENBQUNxQixRQUFRUixJQUFJLENBQUNLLEtBQUs7WUFDekNHLFFBQVFSLElBQUksQ0FBQ1UsT0FBTyxHQUFHRCxNQUFNRSxFQUFFO1lBQy9CLE9BQU9IO1FBQ1Q7SUFDRjtJQUNBSSxPQUFPO1FBQ0xYLFFBQVE7SUFDVjtBQUNGO0FBRU8sTUFBTSxFQUNYSCxJQUFJLEVBQ0pHLE1BQU0sRUFDTlksT0FBTyxFQUNQQyxVQUFVLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxFQUFFLEVBQ3hCLEdBQUdoQyxxREFBUUEsQ0FBQ0ksWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvX2xpYi9hdXRoLmpzP2Q1ODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5leHRBdXRoIGZyb20gXCJuZXh0LWF1dGhcIjtcbmltcG9ydCBHb29nbGUgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvZ29vZ2xlXCI7XG5pbXBvcnQgeyBjcmVhdGVHdWVzdCwgZ2V0R3Vlc3QgfSBmcm9tIFwiLi9kYXRhLXNlcnZpY2VcIjtcblxuY29uc3QgYXV0aENvbmZpZyA9IHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgR29vZ2xlKHtcbiAgICAgIGNsaWVudElkOiBwcm9jZXNzLmVudi5BVVRIX0dPT0dMRV9JRCxcbiAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuQVVUSF9HT09HTEVfU0VDUkVULFxuICAgIH0pLFxuICBdLFxuICBjYWxsYmFja3M6IHtcbiAgICBhdXRob3JpemVkKHsgYXV0aCwgcmVxdWVzdCB9KSB7XG4gICAgICByZXR1cm4gISFhdXRoPy51c2VyO1xuICAgIH0sXG4gICAgYXN5bmMgc2lnbkluKHsgdXNlciwgYWNjb3VudCwgcHJvZmlsZSB9KSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBleGlzdGluZ0d1ZXN0ID0gYXdhaXQgZ2V0R3Vlc3QodXNlci5lbWFpbCk7XG4gICAgICAgIGlmICghZXhpc3RpbmdHdWVzdClcbiAgICAgICAgICBhd2FpdCBjcmVhdGVHdWVzdCh7IGVtYWlsOiB1c2VyLmVtYWlsLCBmdWxsTmFtZTogdXNlci5uYW1lIH0pO1xuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBjYXRjaCB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB1c2VyIH0pIHtcbiAgICAgIGNvbnN0IGd1ZXN0ID0gZ2V0R3Vlc3Qoc2Vzc2lvbi51c2VyLmVtYWlsKTtcbiAgICAgIHNlc3Npb24udXNlci5ndWVzdElkID0gZ3Vlc3QuaWQ7XG4gICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICB9LFxuICB9LFxuICBwYWdlczoge1xuICAgIHNpZ25JbjogXCIvbG9naW5cIixcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCB7XG4gIGF1dGgsXG4gIHNpZ25JbixcbiAgc2lnbk91dCxcbiAgaGFuZGxlcnM6IHsgR0VULCBQT1NUIH0sXG59ID0gTmV4dEF1dGgoYXV0aENvbmZpZyk7XG4iXSwibmFtZXMiOlsiTmV4dEF1dGgiLCJHb29nbGUiLCJjcmVhdGVHdWVzdCIsImdldEd1ZXN0IiwiYXV0aENvbmZpZyIsInByb3ZpZGVycyIsImNsaWVudElkIiwicHJvY2VzcyIsImVudiIsIkFVVEhfR09PR0xFX0lEIiwiY2xpZW50U2VjcmV0IiwiQVVUSF9HT09HTEVfU0VDUkVUIiwiY2FsbGJhY2tzIiwiYXV0aG9yaXplZCIsImF1dGgiLCJyZXF1ZXN0IiwidXNlciIsInNpZ25JbiIsImFjY291bnQiLCJwcm9maWxlIiwiZXhpc3RpbmdHdWVzdCIsImVtYWlsIiwiZnVsbE5hbWUiLCJuYW1lIiwic2Vzc2lvbiIsImd1ZXN0IiwiZ3Vlc3RJZCIsImlkIiwicGFnZXMiLCJzaWduT3V0IiwiaGFuZGxlcnMiLCJHRVQiLCJQT1NUIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./app/_lib/auth.js\n");

/***/ }),

/***/ "(middleware)/./app/_lib/data-service.js":
/*!**********************************!*\
  !*** ./app/_lib/data-service.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBooking: () => (/* binding */ createBooking),\n/* harmony export */   createGuest: () => (/* binding */ createGuest),\n/* harmony export */   deleteBooking: () => (/* binding */ deleteBooking),\n/* harmony export */   getBookedDatesByCabinId: () => (/* binding */ getBookedDatesByCabinId),\n/* harmony export */   getBooking: () => (/* binding */ getBooking),\n/* harmony export */   getBookings: () => (/* binding */ getBookings),\n/* harmony export */   getCabin: () => (/* binding */ getCabin),\n/* harmony export */   getCabinPrice: () => (/* binding */ getCabinPrice),\n/* harmony export */   getCabins: () => (/* binding */ getCabins),\n/* harmony export */   getCountries: () => (/* binding */ getCountries),\n/* harmony export */   getGuest: () => (/* binding */ getGuest),\n/* harmony export */   getSettings: () => (/* binding */ getSettings),\n/* harmony export */   updateBooking: () => (/* binding */ updateBooking),\n/* harmony export */   updateGuest: () => (/* binding */ updateGuest)\n/* harmony export */ });\n/* harmony import */ var _barrel_optimize_names_eachDayOfInterval_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=eachDayOfInterval!=!date-fns */ \"(middleware)/./node_modules/date-fns/esm/eachDayOfInterval/index.js\");\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(middleware)/./app/_lib/supabase.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(middleware)/./node_modules/next/dist/esm/api/navigation.js\");\n\n\n\n/////////////\n// GET\nasync function getCabin(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cabins\").select(\"*\").eq(\"id\", id).single();\n    // For testing\n    // await new Promise((res) => setTimeout(res, 1000));\n    if (error) {\n        console.error(error);\n        (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.notFound)();\n    }\n    return data;\n}\nasync function getCabinPrice(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cabins\").select(\"regularPrice, discount\").eq(\"id\", id).single();\n    if (error) {\n        console.error(error);\n    }\n    return data;\n}\nconst getCabins = async function() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cabins\").select(\"id, name, maxCapacity, regularPrice, discount, image\").order(\"name\");\n    if (error) {\n        console.error(error);\n        throw new Error(\"Cabins could not be loaded\");\n    }\n    return data;\n};\n// Guests are uniquely identified by their email address\nasync function getGuest(email) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"guests\").select(\"*\").eq(\"email\", email).single();\n    // No error here! We handle the possibility of no guest in the sign in callback\n    return data;\n}\nasync function getBooking(id) {\n    const { data, error, count } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"bookings\").select(\"*\").eq(\"id\", id).single();\n    if (error) {\n        console.error(error);\n        throw new Error(\"Booking could not get loaded\");\n    }\n    return data;\n}\nasync function getBookings(guestId) {\n    const { data, error, count } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"bookings\")// We actually also need data on the cabins as well. But let's ONLY take the data that we actually need, in order to reduce downloaded data.\n    .select(\"id, created_at, startDate, endDate, numNights, numGuests, totalPrice, guestId, cabinId, cabins(name, image)\").eq(\"guestId\", guestId).order(\"startDate\");\n    if (error) {\n        console.error(error);\n        throw new Error(\"Bookings could not get loaded\");\n    }\n    return data;\n}\nasync function getBookedDatesByCabinId(cabinId) {\n    let today = new Date();\n    today.setUTCHours(0, 0, 0, 0);\n    today = today.toISOString();\n    // Getting all bookings\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"bookings\").select(\"*\").eq(\"cabinId\", cabinId).or(`startDate.gte.${today},status.eq.checked-in`);\n    if (error) {\n        console.error(error);\n        throw new Error(\"Bookings could not get loaded\");\n    }\n    // Converting to actual dates to be displayed in the date picker\n    const bookedDates = data.map((booking)=>{\n        return (0,_barrel_optimize_names_eachDayOfInterval_date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            start: new Date(booking.startDate),\n            end: new Date(booking.endDate)\n        });\n    }).flat();\n    return bookedDates;\n}\nasync function getSettings() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"settings\").select(\"*\").single();\n    if (error) {\n        console.error(error);\n        throw new Error(\"Settings could not be loaded\");\n    }\n    return data;\n}\nasync function getCountries() {\n    try {\n        const res = await fetch(\"https://restcountries.com/v2/all?fields=name,flag\");\n        const countries = await res.json();\n        return countries;\n    } catch  {\n        throw new Error(\"Could not fetch countries\");\n    }\n}\n/////////////\n// CREATE\nasync function createGuest(newGuest) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"guests\").insert([\n        newGuest\n    ]);\n    if (error) {\n        console.error(error);\n        throw new Error(\"Guest could not be created\");\n    }\n    return data;\n}\nasync function createBooking(newBooking) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"bookings\").insert([\n        newBooking\n    ])// So that the newly created object gets returned!\n    .select().single();\n    if (error) {\n        console.error(error);\n        throw new Error(\"Booking could not be created\");\n    }\n    return data;\n}\n/////////////\n// UPDATE\n// The updatedFields is an object which should ONLY contain the updated data\nasync function updateGuest(id, updatedFields) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"guests\").update(updatedFields).eq(\"id\", id).select().single();\n    if (error) {\n        console.error(error);\n        throw new Error(\"Guest could not be updated\");\n    }\n    return data;\n}\nasync function updateBooking(id, updatedFields) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"bookings\").update(updatedFields).eq(\"id\", id).select().single();\n    if (error) {\n        console.error(error);\n        throw new Error(\"Booking could not be updated\");\n    }\n    return data;\n}\n/////////////\n// DELETE\nasync function deleteBooking(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"bookings\").delete().eq(\"id\", id);\n    if (error) {\n        console.error(error);\n        throw new Error(\"Booking could not be deleted\");\n    }\n    return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./app/_lib/data-service.js\n");

/***/ })

});